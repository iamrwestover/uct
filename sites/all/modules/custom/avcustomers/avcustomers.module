<?php

/**
 * @file
 * AV Customers module.
 */

define('AVCUSTOMERS_MODULE_PATH', drupal_get_path('module', 'avcustomers'));
define('AVCUSTOMER_STATUS_DISABLED', 0);
define('AVCUSTOMER_STATUS_ACTIVE', 1);
define('AVCUSTOMER_STATUS_SUSPENDED', 2);

require_once 'inc/helpers.inc';

/**
 * Implementation of hook_menu().
 */
function avcustomers_menu() {
  $items['av/customers'] = array(
    'title' => 'Customers',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avcustomers_home_form'),
    'access callback' => 'user_is_logged_in',
    'menu_name' => 'av',
    'expanded' => TRUE,
  );
  $items['av/customers/add'] = array(
    'title' => 'New customer',
    'page callback' => 'avcustomers_customer_form_load',
    'page arguments' => array(NULL),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'file' => 'inc/crud.inc',
    'weight' => 10,
  );
  $items['av/customers/%avcustomer/view'] = array(
    'title' => 'View',
    'page callback' => 'avcustomers_customer_form_load',
    'page arguments' => array(2),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'file' => 'inc/crud.inc',
    'weight' => 0,
  );
  $items['av/customers/%avcustomer/edit'] = array(
    'title' => 'Edit',
    'page callback' => 'avcustomers_customer_form_load',
    'page arguments' => array(2),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'file' => 'inc/crud.inc',
    'weight' => 1,
  );
  $items['av/customers/%avcustomer/delete'] = array(
    'title' => 'Delete',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avcustomers_customer_delete_confirm_form', 2),
    'access callback' => 'user_is_logged_in',
    'type' => MENU_LOCAL_TASK,
    'file' => 'inc/crud.inc',
    'weight' => 2,
  );
  $items['av/customers/%avcustomer/%/change-status'] = array(
    'title' => 'Suspend',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('avcustomers_customer_change_status_confirm_form', 2, 3),
    'access callback' => 'user_is_logged_in',
    //'type' => MENU_LOCAL_TASK,
    'file' => 'inc/crud.inc',
  );
  return $items;
}

/**
 * Implementation of hook_theme().
 *
 * @param $existing
 * @param $type
 * @param $theme
 * @param $path
 * @return array
 */
function avcustomers_theme($existing, $type, $theme, $path) {
  $forms_template_path = $path . '/templates/forms';
  $form_names = array(
    'avcustomers_customer_form',
    'avcustomers_home_form',
  );

  $theme_forms = array();
  foreach ($form_names as $form_name) {
    $theme_forms[$form_name] = array(
      'render element' => 'form',
      'template' => str_replace('_', '-', $form_name),
      'path' => $forms_template_path,
    );
  }

  return $theme_forms;
}

/**
 * Customers homepage form.
 *
 * @param $form
 * @param $form_state
 * @return array
 */
function avcustomers_home_form($form, &$form_state) {
//  drupal_add_js('sites/all/libraries/ag-grid/ag-grid.min.js');
//  drupal_add_js(AVCUSTOMERS_MODULE_PATH . '/js/avcustomers.js');

  $btn_options = array('attributes' => array('class' => AV_STYLE_CLASS_BTN . ' ' . AV_STYLE_CLASS_BTN_PRIMARY));
  $form['new_button'] = array('#markup' => l('New customer', 'av/customers/add', $btn_options));

  $header = array(
    array('data' => 'ID', 'field' => 'id', 'sort' => 'desc', 'class' => array('uk-hidden')),
    array('data' => 'Customer / Company', 'field' => 'display_name'),
    array('data' => 'Address', 'field' => 'address'),
    array('data' => 'City', 'field' => 'city'),
    array('data' => 'Province', 'field' => 'province'),
    array('data' => 'Contact', 'field' => ''),
    '&nbsp;',
  );

  $rows = array();
  $result = db_select('avtbl_customers', 'ac')
    ->fields('ac')
    ->extend('PagerDefault')
    ->extend('TableSort')
    ->limit(10)
    ->orderByHeader($header)
    ->execute();

  $action_links_all = array();
  foreach ($result as $row) {
    $row_data = unserialize($row->data);
    $menu_prefix = 'av/customers/' . $row->id;

    // Set row status class.
    switch ($row->status) {
      case AVCUSTOMER_STATUS_SUSPENDED:
        $row_status_class = ' uk-alert-danger';
        break;
      default:
        $row_status_class = '';
        break;
    }

    $action_links = array('links' => array(
      'edit' => array('title' => 'edit', 'href' => $menu_prefix . '/edit', 'icon_kedy' => 'edit', 'query' => drupal_get_destination()),
      'delete' => array('title' => 'delete', 'href' => $menu_prefix . '/delete', 'icond_key' => 'remove', 'query' => drupal_get_destination()),
    ));
    $action_links_all[] = $action_links;
    $actions_html = theme('links__bare', $action_links);
    $linked_name = l($row->display_name, $menu_prefix . '/view');
    $rows[] = array(
      'data' => array(
        'id' => array('data' => $row->id, 'class' => array('uk-hidden')),
        'display_name' => $linked_name . '<span class="uk-text-muted"> / ' . check_plain($row->company) .  '</span>',
        'address' => truncate_utf8(check_plain($row->address), 30, FALSE, TRUE),
        'city' => truncate_utf8(check_plain($row->city), 30, FALSE, TRUE),
        'province' => truncate_utf8(check_plain($row->province), 30, FALSE, TRUE),
        'contact' => isset($row_data['contact_number']) ? $row_data['contact_number'] : '',
        'actions' => $actions_html,
      ),
      'class' => array('uk-table-middle' . $row_status_class),
    );
  }

  $table_attributes = array('id' => 'customers-list-table', 'class' => array('usk-table-condensed'));
  if (empty($rows)) {
    $table_markup = '<p>Nothing recorded yet.</p>';
  }
  else {
    $table_markup = theme('table', array('header' => $header, 'rows' => $rows, 'attributes' => $table_attributes, 'action_links_all' => $action_links_all));
  }
  $form['table']['#markup'] = $table_markup;
  $form['pager']['#markup'] = theme('pager', array('tags' => array()));
//$form['#after_build'] = array('avcustomers_home_form_after_build');
//  $form['ag-grid']['#markup'] = '<div id="myGrid" style="height: 300px;" class="ag-fresh"></div>';
  return $form;
}

function avcustomers_home_form_after_build($form, &$form_state) {
  dpm('f');
  dpm($form);
  return $form;
}
