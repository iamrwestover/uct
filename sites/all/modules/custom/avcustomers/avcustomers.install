<?php

/**
 * Implementation of hook_install().
 */
function avcustomers_install() {
  // Use schema API to create database table.
//  drupal_install_schema('avcustomers');
}



/**
 * Implementation of hook_uninstall().
 */
function avcustomers_uninstall() {
  // Remove tables.
//  drupal_uninstall_schema('avcustomers');
}

/**
 * Implementation of hook_schema().
 * @return mixed
 */
function avcustomers_schema() {
  $schema['avtbl_customers'] = array(
    'description' => 'Customer data',
    'fields' => array(
      'id' => array(
        'description' => 'Customer ID',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'code' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'first_name' => array(
        'description' => 'First name',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'last_name' => array(
        'description' => 'Last name',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'middle_name' => array(
        'description' => 'Middle Name',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'company' => array(
        'description' => 'Company',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'display_name' => array(
        'description' => 'Display name',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'agent_id' => array(
        'description' => 'Agent ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'email' => array(
        'description' => 'E-mail address',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'address' => array(
        'description' => 'Address',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'city' => array(
        'description' => 'City',
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'province' => array(
        'description' => 'Province',
        'type' => 'varchar',
        'length' => '64',
        'not null' => FALSE,
      ),
      'zip_code' => array(
        'description' => 'Postal code',
        'type' => 'varchar',
        'length' => '16',
        'not null' => FALSE,
      ),
      'same_addr' => array(
        'description' => 'Flag whether billing address is the same as shipping address',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'payment_method_id' => array(
        'description' => 'Payment method ID',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'term_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'discount_type' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'discount_value' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'numeric',
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
      'category_id' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'area_id' => array(
        'description' => 'Area id',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'credit_limit' => array(
        'description' => 'Credit limit',
        'type' => 'numeric',
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
      'opening_balance' => array(
        'description' => 'Opening balance',
        'type' => 'numeric',
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
      'created' => array(
        'description' => 'Timestamp when the record is created',
        'type' => 'int',
        'not null' => TRUE,
      ),
      'data' => array(
        'description' => 'Miscellaneous customer info',
        'type' => 'text',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'display_name' => array('display_name')
    ),
    'indexes' => array(
      'agent_id' => array('agent_id'),
      'area_id' => array('area_id'),
      'company' => array('company'),
      'email' => array('email'),
      'first_name' => array('first_name'),
      'last_name' => array('last_name'),
      'term_id' => array('term_id'),
    ),
  );

  return $schema;
}
