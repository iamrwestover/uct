<?php
/**
 * @file
 * UCT base features and functions.
 */

require_once 'inc/helpers.inc';
require_once 'inc/crud.inc';

/**
 * Implements hook_modules_installed().
 *
 * @see avbase_install()
 */
function avbase_modules_installed($modules) {
  if (in_array('menu', $modules)) {
    $menu = array(
      'menu_name' => 'av',
      'title' => t('AV Menu'),
      'description' => t('AV AIS links'),
    );
    menu_save($menu);
  }
}


/**
 * Implementation of hook_init().
 */
function avbase_init() {

}

/**
 * Implementation of hook_menu().
 */
function avbase_menu() {
  $items = array();
  $items['av/categories'] = array(
    'title' => 'Categories',
    'page callback' => 'avbase_categories_home',
    'access callback' => 'user_is_logged_in',
    'menu_name' => 'av',
    'expanded' => TRUE,
    'file' => 'inc/categories.inc',
  );

  $categories = avbase_category_groups();
  foreach ($categories as $k => $v) {
    $category_title = isset($v['plural_name']) ? $v['plural_name'] : $v['name'];
    $items[$v['menu_path']] = array(
      'title' => $category_title,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('avbase_categories_form', $k),
      'access callback' => 'user_is_logged_in',
      'type' => MENU_LOCAL_TASK,
      'file' => 'inc/categories.inc',
    );
    $items[$v['menu_path'] . '/add'] = array(
      'title' => 'New',
      'page callback' => 'avbase_category_form_load',
      'page arguments' => array($k, NULL),
      'access callback' => 'user_is_logged_in',
      'type' => MENU_LOCAL_TASK,
      'file' => 'inc/categories.inc',
    );
    $items[$v['menu_path'] . '/%avcategory/edit'] = array(
      'title' => 'Edit',
      'page callback' => 'avbase_category_form_load',
      'page arguments' => array($k, 3),
      'access callback' => 'user_is_logged_in',
      'type' => MENU_LOCAL_TASK,
      'file' => 'inc/categories.inc',
    );
    $items[$v['menu_path'] . '/%avcategory/delete'] = array(
      'title' => 'Delete',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('avbase_category_delete_confirm_form', $k, 3),
      'access callback' => 'user_is_logged_in',
      'type' => MENU_LOCAL_TASK,
      'file' => 'inc/categories.inc',
    );
  }
  return $items;
}

/**
 * Implementation of hook_form_alter().
 * @param $form
 * @param $form_state
 * @param $form_id
 */
function avbase_form_alter(&$form, $form_state, $form_id) {
  if (!user_access('administer modules')) {
    if ($form_id == 'user_filter_form') {
      $form['#access'] = FALSE;
    }

    if ($form_id == 'user_admin_account') {
      drupal_set_title('Users');
      $form['options']['#access'] = FALSE;
    }
  }

  switch ($form_id) {
    case 'avbase_category_form':
      avbase_category_form_alter($form, $form_state);
      break;
  }
}

/**
 * Return list of system category groups.
 * @param string $category_id
 *
 * @return array
 */
function avbase_category_groups($category_id = '') {
  $groups = array();
  $groups['payment_method'] = array(
    'menu_path' => 'av/categories/payment-methods',
    'name' => 'Payment Method',
    'plural_name' => 'Payment Methods',
  );
  $groups['product_cat'] = array(
    'menu_path' => 'av/categories/product-categories',
    'name' => 'Product Category',
    'plural_name' => 'Product Categories',
  );
  $groups['uom'] = array(
    'menu_path' => 'av/categories/uom',
    'name' => 'Unit of Measure',
  );

  if (isset($groups[$category_id])) {
    return $groups[$category_id];
  }
  return $groups;
}
