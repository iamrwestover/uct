<?php

/**
 * Implementation of hook_schema().
 * @return mixed
 */
function avtxns_schema() {
  $schema = array();

  $schema['avtbl_transactions'] = array(
    'description' => 'Transaction table',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'transaction_type' => array(
        'description' => 'Transaction type',
        'type' => 'varchar',
        'length' => '8',
        'not null' => TRUE,
      ),
      'transaction_date' => array(
        'description' => 'Transaction date',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'client_id' => array(
        'description' => 'Client ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'Transaction status',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
      'term_id' => array(
        'description' => 'Payment Term ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'agent_id' => array(
        'description' => 'Agent ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'reference_id' => array(
        'description' => 'Reference ID',
        'type' => 'varchar',
        'length' => '32',
        'not null' => FALSE,
      ),
      'return_type' => array(
        'description' => 'RUD or RS',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'due_date' => array(
        'description' => 'Due date timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'pmt_method_id' => array(
        'description' => 'Payment Method',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'email' => array(
        'description' => 'Email',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'message' => array(
        'description' => 'Email message',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => 'Timestamp when the record is created',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'changed' => array(
        'description' => 'Timestam when the record was last changed',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'memo' => array(
        'description' => 'Memo',
        'type' => 'text',
        'not null' => FALSE,
      ),
      'uid' => array(
        'description' => 'User id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'amount_to_credit' => array(
        'description' => 'Amount to credit',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'agent_id' => array('agent_id'),
      'client_id' => array('client_id'),
      'due_date' => array('due_date'),
      'reference_id' => array('reference_id'),
      'status' => array('status'),
      'transaction_date' => array('transaction_date'),
      'transaction_type' => array('transaction_type'),
      'uid' => array('uid'),
    ),
  );

  $schema['avtbl_transaction_details'] = array(
    'description' => 'Transaction details',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'transaction_id' => array(
        'description' => 'Transaction ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'item_id' => array(
        'description' => 'Product ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'uom_id' => array(
        'description' => 'Unit of measure ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'qty_per_uom' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'description' => array(
        'description' => 'Product description',
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
      'qty' => array(
        'description' => 'Qty',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'cost' => array(
        'description' => 'TODO: please describe this field!',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
      'good_stock' => array(
        'description' => 'Is it good or bad stock',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'discount1' => array(
        'description' => 'Discount 1',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'precision' => '5',
        'scale' => '2',
      ),
      'discount2' => array(
        'description' => 'Discount 2',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'precision' => '5',
        'scale' => '2',
      ),
      'discount3' => array(
        'description' => 'Discount 3',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'precision' => '5',
        'scale' => '2',
      ),
      'discount4' => array(
        'description' => 'Discount 4',
        'type' => 'numeric',
        'unsigned' => TRUE,
        'not null' => FALSE,
        'precision' => '5',
        'scale' => '2',
      ),
      'ref_txn_dtl_id' => array(
        'description' => 'Reference transaction Detail ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'ref_txn_id' => array(
        'description' => 'Reference Transaction ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'ref_txn_type' => array(
        'description' => 'Reference Transaction Type',
        'type' => 'varchar',
        'length' => '8',
        'not null' => FALSE,
      ),
      'account_id' => array(
        'description' => 'Account ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'client_id' => array(
        'description' => 'Client ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'debit' => array(
        'description' => 'Debit amount',
        'type' => 'numeric',
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
      'credit' => array(
        'description' => 'Credit amount',
        'type' => 'numeric',
        'not null' => FALSE,
        'precision' => '18',
        'scale' => '6',
      ),
    ),
    'primary key' => array('id'),
    'indexes' => array(
      'account_id' => array('account_id', 'client_id'),
      'item_id' => array('item_id'),
      'ref_txn_dtl_id' => array('ref_txn_dtl_id'),
      'ref_txn_id' => array('ref_txn_id'),
      'ref_txn_type' => array('ref_txn_type'),
      'transaction_id' => array('transaction_id'),
    ),
  );

  $schema['avtbl_account_chart'] = array(
    'description' => 'TODO: please describe this table!',
    'fields' => array(
      'id' => array(
        'description' => 'Primary Key',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'Account Title',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'account_type' => array(
        'description' => 'Account Type ID',
        'type' => 'varchar',
        'length' => '8',
        'not null' => TRUE,
      ),
      'parent' => array(
        'description' => 'Parent ID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'weight' => array(
        'description' => 'Weght',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => FALSE,
      ),
      'created' => array(
        'description' => 'Created timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'uid' => array(
        'description' => 'Created by UID',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'changed' => array(
        'description' => 'Changed timestamp',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'fixed' => array(
        'description' => 'If account cannot be changed or deleted',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'status' => array(
        'description' => 'Status',
        'type' => 'int',
        'unsigned' => TRUE,
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 1,
      ),
    ),
    'primary key' => array('id'),
    'unique keys' => array(
      'title' => array('title')
    ),
    'indexes' => array(
      'status' => array('status'),
      'type_id' => array('account_type', 'parent'),
    ),
  );

  return $schema;
}

/**
 * Increase decimal precision of discount fields.
 */
function avtxns_update_7101() {
  $schema = avtxns_schema();
  $table_name = 'avtbl_transaction_details';
  $fields = $schema[$table_name]['fields'];

  $field_name = 'discount1';
  db_change_field($table_name, $field_name, $field_name, $fields[$field_name]);
  $field_name = 'discount2';
  db_change_field($table_name, $field_name, $field_name, $fields[$field_name]);
  $field_name = 'discount3';
  db_change_field($table_name, $field_name, $field_name, $fields[$field_name]);
  $field_name = 'discount4';
  db_change_field($table_name, $field_name, $field_name, $fields[$field_name]);
  return t('Successfully increased decimal precision of discount fields.');
}

